{"version":3,"sources":["webpack://@flarum/flarum-ext-close/webpack/bootstrap","webpack://@flarum/flarum-ext-close/./forum.js","webpack://@flarum/flarum-ext-close/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@flarum/flarum-ext-close/./src/forum/addCloseBadge.js","webpack://@flarum/flarum-ext-close/./src/forum/addCloseControl.js","webpack://@flarum/flarum-ext-close/./src/forum/components/DiscussionClosedNotification.js","webpack://@flarum/flarum-ext-close/./src/forum/components/DiscussionClosedPost.js","webpack://@flarum/flarum-ext-close/./src/forum/index.js","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['Model']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['app']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/Badge']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/Button']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/CommentPost']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/EventPost']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/Notification']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['components/NotificationGrid']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['extend']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['models/Discussion']\"","webpack://@flarum/flarum-ext-close/external \"flarum.core.compat['utils/DiscussionControls']\""],"names":["extend","Discussion","prototype","badges","isClosed","add","Badge","component","type","label","app","translator","trans","icon","DiscussionControls","items","discussion","canClose","Button","children","onclick","closeAction","bind","save","then","current","DiscussionPage","stream","update","m","redraw","DiscussionClosedNotification","href","notification","props","route","subject","content","postNumber","user","fromUser","Notification","DiscussionClosedPost","post","closed","descriptionKey","EventPost","initializers","postComponents","discussionClosed","notificationComponents","Model","attribute","addCloseBadge","addCloseControl","NotificationGrid","name"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./forum.js\");\n","/*\n * This file is part of hiqstd/flarum-ext-close.\n *\n * Copyright (c) 2019 vetosers.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport * from './src/forum';\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import {extend} from 'flarum/extend';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\n\nexport default function () {\n    extend(Discussion.prototype, 'badges', function (badges) {\n        if (this.isClosed()) {\n            badges.add('closed', Badge.component({\n                type: 'closed',\n                label: app.translator.trans('flarum-ext-close.forum.badge.closed_tooltip'),\n                icon: 'fas fa-eye-slash'\n            }));\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Button from 'flarum/components/Button';\n\nexport default function () {\n    extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n        if (discussion.canClose()) {\n            items.add('close', Button.component({\n                children: app.translator.trans(discussion.isClosed() ? 'flarum-ext-close.forum.discussion_controls.unclosed_button' : 'flarum-ext-close.forum.discussion_controls.close_button'),\n                icon: 'fas fa-eye-slash',\n                onclick: this.closeAction.bind(discussion)\n            }));\n        }\n    });\n\n    DiscussionControls.closeAction = function () {\n        this.save({isClosed: !this.isClosed()}).then(() => {\n            if (app.current instanceof DiscussionPage) {\n                app.current.stream.update();\n            }\n\n            m.redraw();\n        });\n    };\n}\n","import Notification from 'flarum/components/Notification';\n\nexport default class DiscussionClosedNotification extends Notification {\n    icon() {\n        return 'fas fa-eye-slash';\n    }\n\n    href() {\n        const notification = this.props.notification;\n\n        return app.route.discussion(notification.subject(), notification.content().postNumber);\n    }\n\n    content() {\n        return app.translator.trans('flarum-ext-close.forum.notifications.discussion_closed_text', {user: this.props.notification.fromUser()});\n    }\n}\n","import EventPost from 'flarum/components/EventPost';\n\nexport default class DiscussionClosedPost extends EventPost {\n    icon() {\n        return this.props.post.content().closed\n            ? 'fas fa-eye-slash'\n            : 'fas fa-eye';\n    }\n\n    descriptionKey() {\n        return this.props.post.content().closed\n            ? 'flarum-ext-close.forum.post_stream.discussion_closed_text'\n            : 'flarum-ext-close.forum.post_stream.discussion_unclosed_text';\n    }\n}\n","import {extend} from 'flarum/extend';\nimport app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport CommentPost from 'flarum/components/CommentPost';\nimport Discussion from 'flarum/models/Discussion';\nimport NotificationGrid from 'flarum/components/NotificationGrid';\n\nimport DiscussionClosedPost from './components/DiscussionClosedPost';\nimport DiscussionClosedNotification from './components/DiscussionClosedNotification';\nimport addCloseBadge from './addCloseBadge';\nimport addCloseControl from './addCloseControl';\n\napp.initializers.add('flarum-ext-close', () => {\n    app.postComponents.discussionClosed = DiscussionClosedPost;\n    app.notificationComponents.discussionClosed = DiscussionClosedNotification;\n\n    Discussion.prototype.isClosed = Model.attribute('isClosed');\n    Discussion.prototype.canClose = Model.attribute('canClose');\n\n    addCloseBadge();\n    addCloseControl();\n\n    extend(NotificationGrid.prototype, 'notificationTypes', function (items) {\n        items.add('discussionClosed', {\n            name: 'discussionClosed',\n            icon: 'fas fa-eye-slash',\n            label: app.translator.trans('flarum-ext-close.forum.settings.notify_discussion_closed_label')\n        });\n    });\n});\n","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/EventPost'];","module.exports = flarum.core.compat['components/Notification'];","module.exports = flarum.core.compat['components/NotificationGrid'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['utils/DiscussionControls'];"],"sourceRoot":""}